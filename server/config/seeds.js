const { Sensor, Data } = require('./models');
const db = require('./config/connection');

const sensorData = [
	{
		_id: '6085156541d737267a408985',
		measurement: 'temperature',
		value: '52.41',
		timeStamp: '2021-04-25T07:08:21.493Z',
		__v: 0,
	},
	{
		_id: '6085156541d737267a408986',
		measurement: 'humidity',
		value: '58',
		timeStamp: '2021-04-25T07:08:21.494Z',
		__v: 0,
	},
	{
		_id: '6085156541d737267a408987',
		measurement: 'windspeed',
		value: '4.72',
		timeStamp: '2021-04-25T07:08:21.494Z',
		__v: 0,
	},
	{
		_id: '6085159eebff1a26919ef92c',
		measurement: 'temperature',
		value: '52.41',
		timeStamp: '2021-04-25T07:09:18.473Z',
		__v: 0,
	},
	{
		_id: '6085159eebff1a26919ef92d',
		measurement: 'humidity',
		value: '58',
		timeStamp: '2021-04-25T07:09:18.475Z',
		__v: 0,
	},
	{
		_id: '6085159eebff1a26919ef92e',
		measurement: 'windspeed',
		value: '4.72',
		timeStamp: '2021-04-25T07:09:18.475Z',
		__v: 0,
	},
	{
		_id: '608515daebff1a26919ef92f',
		measurement: 'temperature',
		value: '52.41',
		timeStamp: '2021-04-25T07:10:18.510Z',
		__v: 0,
	},
	{
		_id: '608515daebff1a26919ef930',
		measurement: 'humidity',
		value: '58',
		timeStamp: '2021-04-25T07:10:18.511Z',
		__v: 0,
	},
	{
		_id: '608515daebff1a26919ef931',
		measurement: 'windspeed',
		value: '4.72',
		timeStamp: '2021-04-25T07:10:18.511Z',
		__v: 0,
	},
	{
		_id: '608515ffd94cb326b4b89339',
		measurement: 'temperature',
		value: '52.41',
		timeStamp: '2021-04-25T07:10:55.627Z',
		__v: 0,
	},
	{
		_id: '608515ffd94cb326b4b8933a',
		measurement: 'humidity',
		value: '58',
		timeStamp: '2021-04-25T07:10:55.629Z',
		__v: 0,
	},
	{
		_id: '608515ffd94cb326b4b8933b',
		measurement: 'windspeed',
		value: '4.72',
		timeStamp: '2021-04-25T07:10:55.629Z',
		__v: 0,
	},
	{
		_id: '6085163bd94cb326b4b8933c',
		measurement: 'temperature',
		value: '52.41',
		timeStamp: '2021-04-25T07:11:55.786Z',
		__v: 0,
	},
	{
		_id: '6085163bd94cb326b4b8933d',
		measurement: 'humidity',
		value: '58',
		timeStamp: '2021-04-25T07:11:55.787Z',
		__v: 0,
	},
	{
		_id: '6085163bd94cb326b4b8933e',
		measurement: 'windspeed',
		value: '4.72',
		timeStamp: '2021-04-25T07:11:55.788Z',
		__v: 0,
	},
	{
		_id: '60851677d94cb326b4b8933f',
		measurement: 'temperature',
		value: '52.41',
		timeStamp: '2021-04-25T07:12:55.591Z',
		__v: 0,
	},
	{
		_id: '60851677d94cb326b4b89340',
		measurement: 'humidity',
		value: '58',
		timeStamp: '2021-04-25T07:12:55.592Z',
		__v: 0,
	},
	{
		_id: '60851677d94cb326b4b89341',
		measurement: 'windspeed',
		value: '4.72',
		timeStamp: '2021-04-25T07:12:55.592Z',
		__v: 0,
	},
	{
		_id: '608516b3d94cb326b4b89342',
		measurement: 'temperature',
		value: '52.41',
		timeStamp: '2021-04-25T07:13:55.691Z',
		__v: 0,
	},
	{
		_id: '608516b3d94cb326b4b89343',
		measurement: 'humidity',
		value: '58',
		timeStamp: '2021-04-25T07:13:55.692Z',
		__v: 0,
	},
	{
		_id: '608516b3d94cb326b4b89344',
		measurement: 'windspeed',
		value: '4.72',
		timeStamp: '2021-04-25T07:13:55.692Z',
		__v: 0,
	},
	{
		_id: '608516f156c2d526e6d48cb0',
		measurement: 'temperature',
		value: '52.41',
		timeStamp: '2021-04-25T07:14:57.989Z',
		__v: 0,
	},
	{
		_id: '608516f156c2d526e6d48cb1',
		measurement: 'humidity',
		value: '58',
		timeStamp: '2021-04-25T07:14:57.991Z',
		__v: 0,
	},
	{
		_id: '608516f156c2d526e6d48cb2',
		measurement: 'windspeed',
		value: '4.72',
		timeStamp: '2021-04-25T07:14:57.991Z',
		__v: 0,
	},
	{
		_id: '6085172d56c2d526e6d48cb3',
		measurement: 'temperature',
		value: '52.41',
		timeStamp: '2021-04-25T07:15:57.853Z',
		__v: 0,
	},
	{
		_id: '6085172d56c2d526e6d48cb4',
		measurement: 'humidity',
		value: '58',
		timeStamp: '2021-04-25T07:15:57.853Z',
		__v: 0,
	},
	{
		_id: '6085172d56c2d526e6d48cb5',
		measurement: 'windspeed',
		value: '4.72',
		timeStamp: '2021-04-25T07:15:57.854Z',
		__v: 0,
	},
	{
		_id: '608517427aa1532700b6c981',
		measurement: 'temperature',
		value: '52.41',
		timeStamp: '2021-04-25T07:16:18.885Z',
		__v: 0,
	},
	{
		_id: '608517427aa1532700b6c982',
		measurement: 'humidity',
		value: '58',
		timeStamp: '2021-04-25T07:16:18.886Z',
		__v: 0,
	},
	{
		_id: '608517427aa1532700b6c983',
		measurement: 'windspeed',
		value: '4.72',
		timeStamp: '2021-04-25T07:16:18.887Z',
		__v: 0,
	},
	{
		_id: '60851789cef86d27178d61b5',
		measurement: 'temperature',
		value: '52.41',
		timeStamp: '2021-04-25T07:17:29.234Z',
		__v: 0,
	},
	{
		_id: '60851789cef86d27178d61b6',
		measurement: 'humidity',
		value: '58',
		timeStamp: '2021-04-25T07:17:29.235Z',
		__v: 0,
	},
	{
		_id: '60851789cef86d27178d61b7',
		measurement: 'windspeed',
		value: '4.72',
		timeStamp: '2021-04-25T07:17:29.236Z',
		__v: 0,
	},
	{
		_id: '608517ae09f597272ec82096',
		measurement: 'temperature',
		value: '52.41',
		timeStamp: '2021-04-25T07:18:06.714Z',
		__v: 0,
	},
	{
		_id: '608517ae09f597272ec82097',
		measurement: 'humidity',
		value: '58',
		timeStamp: '2021-04-25T07:18:06.716Z',
		__v: 0,
	},
	{
		_id: '608517ae09f597272ec82098',
		measurement: 'windspeed',
		value: '4.72',
		timeStamp: '2021-04-25T07:18:06.716Z',
		__v: 0,
	},
	{
		_id: '608517e3f5abf127474612bd',
		measurement: 'temperature',
		value: '52.41',
		timeStamp: '2021-04-25T07:18:59.357Z',
		__v: 0,
	},
	{
		_id: '608517e3f5abf127474612be',
		measurement: 'humidity',
		value: '58',
		timeStamp: '2021-04-25T07:18:59.358Z',
		__v: 0,
	},
	{
		_id: '608517e3f5abf127474612bf',
		measurement: 'windspeed',
		value: '4.72',
		timeStamp: '2021-04-25T07:18:59.358Z',
		__v: 0,
	},
	{
		_id: '6085181ff5abf127474612c0',
		measurement: 'temperature',
		value: '52.59',
		timeStamp: '2021-04-25T07:19:59.525Z',
		__v: 0,
	},
];

db.once('open', async () => {
	await Sensor.findOneAndDelete({ sensorName: 'rpi4test' });

	Sensor.create({
		sensorName: 'rpi4test',
		username: 'testuser',
		modes: [
			{
				measurementName: 'temperature',
				dataFormat: 'float',
				units: 'Fahrenheit',
			},
			,
			{
				measurementName: 'humidity',
				dataFormat: 'float',
				units: '%',
			},
			,
			{
				measurementName: 'windspeed',
				dataFormat: 'float',
				units: 'mph',
			},
		],
		data: sensorData.map(item => item._id),
	})
		.then(res => console.log('sensor added'))
		.then(async res => {
			await Data.deleteMany({});
			await Data.create(sensorData);
			console.log('sensor data added');
		})
		.catch(err => console.log(err));
});
