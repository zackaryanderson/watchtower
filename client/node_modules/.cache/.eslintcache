[{"/Users/zan/Desktop/projects/watchtower/client/src/index.js":"1","/Users/zan/Desktop/projects/watchtower/client/src/reportWebVitals.js":"2","/Users/zan/Desktop/projects/watchtower/client/src/App.js":"3","/Users/zan/Desktop/projects/watchtower/client/src/components/Header.js":"4","/Users/zan/Desktop/projects/watchtower/client/src/pages/Dashboard.js":"5","/Users/zan/Desktop/projects/watchtower/client/src/components/DeviceCard.js":"6","/Users/zan/Desktop/projects/watchtower/client/src/components/Nav.js":"7","/Users/zan/Desktop/projects/watchtower/client/src/pages/DataUpload.js":"8","/Users/zan/Desktop/projects/watchtower/client/src/utils/mutations.js":"9","/Users/zan/Desktop/projects/watchtower/client/src/utils/auth.js":"10"},{"size":500,"mtime":1618849540103,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1618849540103,"results":"13","hashOfConfig":"12"},{"size":931,"mtime":1619472233546,"results":"14","hashOfConfig":"12"},{"size":1474,"mtime":1619472195965,"results":"15","hashOfConfig":"12"},{"size":199,"mtime":1619204841436,"results":"16","hashOfConfig":"12"},{"size":798,"mtime":1619204841435,"results":"17","hashOfConfig":"12"},{"size":1700,"mtime":1619471992360,"results":"18","hashOfConfig":"12"},{"size":1517,"mtime":1619468266048,"results":"19","hashOfConfig":"12"},{"size":828,"mtime":1619470745736,"results":"20","hashOfConfig":"12"},{"size":1492,"mtime":1619455785139,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1fp9jmh",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zan/Desktop/projects/watchtower/client/src/index.js",[],["44","45"],"/Users/zan/Desktop/projects/watchtower/client/src/reportWebVitals.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/App.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/components/Header.js",["46"],"/Users/zan/Desktop/projects/watchtower/client/src/pages/Dashboard.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/components/DeviceCard.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/components/Nav.js",["47"],"/Users/zan/Desktop/projects/watchtower/client/src/pages/DataUpload.js",["48"],"import React, { useEffect } from 'react';\n//import { useParams } from 'react-router-dom';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_DATA } from '../utils/mutations';\n\nfunction DataUpload() {\n\n    //load mutation function\n    const [addData, {error} ] = useMutation(ADD_DATA);\n\n    //get data from url and sort it\n    let info = window.location.href;\n    let data = info.split('?')[1];\n    let sortedData = data.split('&');\n\n    //sort data into variable names\n    let sensorName = sortedData[0].split('=')[1];\n    let measurement = parseInt(sortedData[1].split('=')[1]);\n    let units = sortedData[2].split('=')[1];\n\n    console.log(sensorName, measurement, units);\n\n    //mutation to post data to server\n    const dataSubmit = async () => {\n\n        try {\n            const mutationResponse = await addData({\n                variables: {\n                    sensorName: sensorName,\n                    measurement: measurement,\n                    units: units\n                }\n            });\n\n            if (error) {\n                throw new Error('something went wrong');\n            };\n\n            console.log(mutationResponse);\n\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    //run mutation function once on page load\n    useEffect(() => {\n\n        dataSubmit(sortedData);\n\n    }, []);\n\n\n    return (\n        <>\n            <h1>Sensor Name: {sensorName}</h1>\n            <h1>Measurement: {measurement} {units}</h1>\n        </>\n    )\n\n}\n\nexport default DataUpload","/Users/zan/Desktop/projects/watchtower/client/src/utils/mutations.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/utils/auth.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":2,"column":8,"nodeType":"55","messageId":"56","endLine":2,"endColumn":11},{"ruleId":"53","severity":1,"message":"57","line":6,"column":7,"nodeType":"55","messageId":"56","endLine":6,"endColumn":12},{"ruleId":"58","severity":1,"message":"59","line":51,"column":8,"nodeType":"60","endLine":51,"endColumn":10,"suggestions":"61"},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'Nav' is defined but never used.","Identifier","unusedVar","'NavUl' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dataSubmit' and 'sortedData'. Either include them or remove the dependency array.","ArrayExpression",["64"],"no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [dataSubmit, sortedData]",{"range":"67","text":"68"},[1336,1338],"[dataSubmit, sortedData]"]