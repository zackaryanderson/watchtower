[{"/Users/zan/Desktop/projects/watchtower/client/src/index.js":"1","/Users/zan/Desktop/projects/watchtower/client/src/reportWebVitals.js":"2","/Users/zan/Desktop/projects/watchtower/client/src/App.js":"3","/Users/zan/Desktop/projects/watchtower/client/src/pages/Community.js":"4","/Users/zan/Desktop/projects/watchtower/client/src/pages/Dashboard.js":"5","/Users/zan/Desktop/projects/watchtower/client/src/components/Header.js":"6","/Users/zan/Desktop/projects/watchtower/client/src/pages/Login.js":"7","/Users/zan/Desktop/projects/watchtower/client/src/pages/DataUpload.js":"8","/Users/zan/Desktop/projects/watchtower/client/src/components/DeviceCard.js":"9","/Users/zan/Desktop/projects/watchtower/client/src/utils/mutations.js":"10","/Users/zan/Desktop/projects/watchtower/client/src/utils/queries.js":"11","/Users/zan/Desktop/projects/watchtower/client/src/utils/auth.js":"12","/Users/zan/Desktop/projects/watchtower/client/src/pages/Sensor.js":"13"},{"size":500,"mtime":1618849540103,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1618849540103,"results":"16","hashOfConfig":"15"},{"size":1214,"mtime":1619717531010,"results":"17","hashOfConfig":"15"},{"size":1482,"mtime":1619573067168,"results":"18","hashOfConfig":"15"},{"size":1072,"mtime":1619716531836,"results":"19","hashOfConfig":"15"},{"size":3991,"mtime":1619717263128,"results":"20","hashOfConfig":"15"},{"size":2072,"mtime":1619716946168,"results":"21","hashOfConfig":"15"},{"size":1469,"mtime":1619579002378,"results":"22","hashOfConfig":"15"},{"size":1676,"mtime":1619717730624,"results":"23","hashOfConfig":"15"},{"size":1184,"mtime":1619573067170,"results":"24","hashOfConfig":"15"},{"size":1407,"mtime":1619573067170,"results":"25","hashOfConfig":"15"},{"size":1492,"mtime":1619573067170,"results":"26","hashOfConfig":"15"},{"size":137,"mtime":1619717602318,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1xc9jx",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/zan/Desktop/projects/watchtower/client/src/index.js",[],["57","58"],"/Users/zan/Desktop/projects/watchtower/client/src/reportWebVitals.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/App.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/pages/Community.js",["59","60","61","62"],"import React, { useState, useEffect } from \"react\"\nimport { useMutation, useQuery } from \"@apollo/react-hooks\"\nimport { ADD_POST } from \"../utils/mutations\"\nimport { QUERY_POSTS } from '../utils/queries';\n\nconst dummyPostData = [{ username: \"John Doe\", postText: \"john doe says Hello World\" }, { username: \" Jane Doe\", postText: \"Jane says hello world\" }]\nfunction Community() {\n    const { loading, data } = useQuery(QUERY_POSTS);\n    const posts = dummyPostData;//TODO:remove dummbyPostData and replace with real data \n\n    const [addPost, { err }] = useMutation(ADD_POST,\n        {\n            refetchQueries: [\n                { query: QUERY_POSTS }\n            ]\n        })\n    /* using refetch becuase you want to keep the data on the- \n     * page and the data from the server in sync \n     */\n\n    const [newPost, setNewPost] = useState(\"\")\n    const handleNewPost = (e) => {\n        addPost({ variables: { postText: newPost } }).then(res => {\n            console.log(res)\n            setNewPost(\"\")\n        })\n    }\n    return (\n        <div>\n            {posts.map(post => (\n                <div>\n                    <h1>{post.username}</h1>\n                    <h1>{post.postText}</h1>\n                </div>\n            ))}\n            <input value={newPost} onChange={e => setNewPost(e.target.value)}>\n            </input>\n            <button onClick={handleNewPost}>\n                Add Post\n                </button>\n        </div >\n    );\n}\nexport default Community;","/Users/zan/Desktop/projects/watchtower/client/src/pages/Dashboard.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/components/Header.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/pages/Login.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/pages/DataUpload.js",["63"],"import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_DATA } from '../utils/mutations';\n\nfunction DataUpload() {\n\n    //load mutation function\n    const [addData, {error} ] = useMutation(ADD_DATA);\n\n    //get data from url and sort it\n    let info = window.location.href;\n    let data = info.split('?')[1];\n    let sortedData = data.split('&');\n\n    //sort data into variable names\n    let sensorName = sortedData[0].split('=')[1];\n    let measurement = parseInt(sortedData[1].split('=')[1]);\n    let units = sortedData[2].split('=')[1];\n\n    console.log(sensorName, measurement, units);\n\n    //mutation to post data to server\n    const dataSubmit = async () => {\n\n        try {\n            const mutationResponse = await addData({\n                variables: {\n                    sensorName: sensorName,\n                    measurement: measurement,\n                    units: units\n                }\n            });\n\n            if (error) {\n                throw new Error('something went wrong');\n            };\n\n            console.log(mutationResponse);\n\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    //run mutation function once on page load\n    useEffect(() => {\n\n        dataSubmit(sortedData);\n\n    }, []);\n\n\n    return (\n        <>\n            <h1>Sensor Name: {sensorName}</h1>\n            <h1>Measurement: {measurement} {units}</h1>\n        </>\n    )\n\n}\n\nexport default DataUpload","/Users/zan/Desktop/projects/watchtower/client/src/components/DeviceCard.js",["64","65"],"/Users/zan/Desktop/projects/watchtower/client/src/utils/mutations.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/utils/queries.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/utils/auth.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/pages/Sensor.js",["66"],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":27,"nodeType":"73","messageId":"74","endLine":1,"endColumn":36},{"ruleId":"71","severity":1,"message":"75","line":8,"column":13,"nodeType":"73","messageId":"74","endLine":8,"endColumn":20},{"ruleId":"71","severity":1,"message":"76","line":8,"column":22,"nodeType":"73","messageId":"74","endLine":8,"endColumn":26},{"ruleId":"71","severity":1,"message":"77","line":11,"column":23,"nodeType":"73","messageId":"74","endLine":11,"endColumn":26},{"ruleId":"78","severity":1,"message":"79","line":50,"column":8,"nodeType":"80","endLine":50,"endColumn":10,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":47,"column":15,"nodeType":"84","endLine":47,"endColumn":50},{"ruleId":"85","severity":1,"message":"86","line":53,"column":14,"nodeType":"84","endLine":53,"endColumn":18},{"ruleId":"71","severity":1,"message":"87","line":1,"column":17,"nodeType":"73","messageId":"74","endLine":1,"endColumn":25},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'data' is assigned a value but never used.","'err' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dataSubmit' and 'sortedData'. Either include them or remove the dependency array.","ArrayExpression",["90"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [dataSubmit, sortedData]",{"range":"93","text":"94"},[1288,1290],"[dataSubmit, sortedData]"]