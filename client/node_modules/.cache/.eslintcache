[{"/Users/zan/Desktop/projects/watchtower/client/src/index.js":"1","/Users/zan/Desktop/projects/watchtower/client/src/reportWebVitals.js":"2","/Users/zan/Desktop/projects/watchtower/client/src/App.js":"3","/Users/zan/Desktop/projects/watchtower/client/src/components/Header.js":"4","/Users/zan/Desktop/projects/watchtower/client/src/pages/Dashboard.js":"5","/Users/zan/Desktop/projects/watchtower/client/src/pages/DataUpload.js":"6","/Users/zan/Desktop/projects/watchtower/client/src/pages/DeleteSensor.js":"7","/Users/zan/Desktop/projects/watchtower/client/src/pages/Sensor.js":"8","/Users/zan/Desktop/projects/watchtower/client/src/pages/AddSensor.js":"9","/Users/zan/Desktop/projects/watchtower/client/src/pages/Signup.js":"10","/Users/zan/Desktop/projects/watchtower/client/src/pages/Login.js":"11","/Users/zan/Desktop/projects/watchtower/client/src/components/DeviceCard.js":"12","/Users/zan/Desktop/projects/watchtower/client/src/utils/auth.js":"13","/Users/zan/Desktop/projects/watchtower/client/src/utils/mutations.js":"14","/Users/zan/Desktop/projects/watchtower/client/src/utils/queries.js":"15"},{"size":500,"mtime":1618849540103,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1618849540103,"results":"18","hashOfConfig":"17"},{"size":1401,"mtime":1620013311903,"results":"19","hashOfConfig":"17"},{"size":3662,"mtime":1623195327602,"results":"20","hashOfConfig":"17"},{"size":402,"mtime":1623195327602,"results":"21","hashOfConfig":"17"},{"size":1469,"mtime":1620012294591,"results":"22","hashOfConfig":"17"},{"size":1364,"mtime":1620012294591,"results":"23","hashOfConfig":"17"},{"size":2465,"mtime":1620012294592,"results":"24","hashOfConfig":"17"},{"size":2375,"mtime":1620013311903,"results":"25","hashOfConfig":"17"},{"size":3205,"mtime":1620013311904,"results":"26","hashOfConfig":"17"},{"size":2060,"mtime":1620013311903,"results":"27","hashOfConfig":"17"},{"size":1968,"mtime":1623195327602,"results":"28","hashOfConfig":"17"},{"size":1492,"mtime":1620012294593,"results":"29","hashOfConfig":"17"},{"size":1199,"mtime":1623195327603,"results":"30","hashOfConfig":"17"},{"size":1025,"mtime":1623195327603,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1xc9jx",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/zan/Desktop/projects/watchtower/client/src/index.js",[],["65","66"],"/Users/zan/Desktop/projects/watchtower/client/src/reportWebVitals.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/App.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/components/Header.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/pages/Dashboard.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/pages/DataUpload.js",["67"],"import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_DATA } from '../utils/mutations';\n\nfunction DataUpload() {\n\n    //load mutation function\n    const [addData, {error} ] = useMutation(ADD_DATA);\n\n    //get data from url and sort it\n    let info = window.location.href;\n    let data = info.split('?')[1];\n    let sortedData = data.split('&');\n\n    //sort data into variable names\n    let sensorName = sortedData[0].split('=')[1];\n    let measurement = parseInt(sortedData[1].split('=')[1]);\n    let units = sortedData[2].split('=')[1];\n\n    console.log(sensorName, measurement, units);\n\n    //mutation to post data to server\n    const dataSubmit = async () => {\n\n        try {\n            const mutationResponse = await addData({\n                variables: {\n                    sensorName: sensorName,\n                    measurement: measurement,\n                    units: units\n                }\n            });\n\n            if (error) {\n                throw new Error('something went wrong');\n            };\n\n            console.log(mutationResponse);\n\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    //run mutation function once on page load\n    useEffect(() => {\n\n        dataSubmit(sortedData);\n\n    }, []);\n\n\n    return (\n        <>\n            <h1>Sensor Name: {sensorName}</h1>\n            <h1>Measurement: {measurement} {units}</h1>\n        </>\n    )\n\n}\n\nexport default DataUpload","/Users/zan/Desktop/projects/watchtower/client/src/pages/DeleteSensor.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/pages/Sensor.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/pages/AddSensor.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/pages/Signup.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/pages/Login.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/components/DeviceCard.js",["68"],"import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from '@apollo/react-hooks';\n\n//import queries\nimport { QUERY_USER } from '../utils/queries';\n\nfunction DeviceCard() {\n\n\tconst { loading, data } = useQuery(QUERY_USER);\n\n\t// if (loading) {\n\t// \treturn (\n\t// \t\t<h2>Loading...</h2>\n\t// \t)\n\t// }\n\n\t// console.log(data);\n\t// const sensors = data.user.sensors;\n\n\n\t//calculate time since last update\n\tconst formattedTime = (time) => {\n\t\tconst now = new Date();\n\n\t\tconst elapsedTime = Math.round((now - time) / (60 * 1000));\n\n\t\treturn elapsedTime;\n\t}\n\n\n\t// //determine units\n\tconst formattedUnits = (units) => {\n\t\tif (units === \"degF\") {\n\t\t\treturn '°F';\n\t\t} else if (units === \"degC\") {\n\t\t\treturn '°C';\n\t\t} else if (units === 'kelvin') {\n\t\t\treturn 'K';\n\t\t} else {\n\t\t\treturn units;\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"flex justify-center\">\n\t\t\t{loading ?\n\t\t\t\t(<h2>Loading...</h2>\n\t\t\t\t) : (\n\t\t\t\t\t<div className=\"grid grid-cols-2\">\n\t\t\t\t\t\t{data.user.sensors && data.user.sensors.map(sensor => (\n\t\t\t\t\t\t\t<div key={sensor._id} className=\"border-2 rounded border-black m-1 p-1\">\n\t\t\t\t\t\t\t\t<div className=\"font-bold text-white bg-black rounded-t\">\n\t\t\t\t\t\t\t\t\t<h3>{sensor.sensorName}</h3>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t{sensor.data.length ?\n\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t\t<h1><a className=\"font-zcool text-4xl inline\">{sensor.data[sensor.data.length - 1].measurement}</a> {formattedUnits(sensor.data[sensor.data.length - 1].units)}</h1>\n\t\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"text-xs\">Last updated {formattedTime(sensor.data[sensor.data.length - 1].timeStamp)} minutes ago</h4>\n\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/sensor/${sensor.sensorName}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button className=\"bg-fifth text-white hover:bg-fourth hover:text-black rounded mt-2 p-1 text-sm mr-1\">View Data</button>\n\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t) : (<h4>No Data Yet</h4>)}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t</div>\n\t);\n}\n\nexport default DeviceCard;\n","/Users/zan/Desktop/projects/watchtower/client/src/utils/auth.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/utils/mutations.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/utils/queries.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":50,"column":8,"nodeType":"75","endLine":50,"endColumn":10,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":61,"column":17,"nodeType":"79","endLine":61,"endColumn":59},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dataSubmit' and 'sortedData'. Either include them or remove the dependency array.","ArrayExpression",["82"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},"Update the dependencies array to be: [dataSubmit, sortedData]",{"range":"85","text":"86"},[1288,1290],"[dataSubmit, sortedData]"]