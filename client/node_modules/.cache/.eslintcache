[{"/Users/zan/Desktop/projects/watchtower/client/src/index.js":"1","/Users/zan/Desktop/projects/watchtower/client/src/App.js":"2","/Users/zan/Desktop/projects/watchtower/client/src/reportWebVitals.js":"3","/Users/zan/Desktop/projects/watchtower/client/src/pages/Community.js":"4","/Users/zan/Desktop/projects/watchtower/client/src/pages/Login.js":"5","/Users/zan/Desktop/projects/watchtower/client/src/pages/Dashboard.js":"6","/Users/zan/Desktop/projects/watchtower/client/src/pages/Sensor.js":"7","/Users/zan/Desktop/projects/watchtower/client/src/pages/DataUpload.js":"8","/Users/zan/Desktop/projects/watchtower/client/src/components/Header.js":"9","/Users/zan/Desktop/projects/watchtower/client/src/components/DeviceCard.js":"10","/Users/zan/Desktop/projects/watchtower/client/src/utils/mutations.js":"11","/Users/zan/Desktop/projects/watchtower/client/src/utils/queries.js":"12","/Users/zan/Desktop/projects/watchtower/client/src/utils/auth.js":"13","/Users/zan/Desktop/projects/watchtower/client/src/pages/DeleteSensor.js":"14"},{"size":500,"mtime":1618849540103,"results":"15","hashOfConfig":"16"},{"size":1329,"mtime":1619999147468,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1618849540103,"results":"18","hashOfConfig":"16"},{"size":1482,"mtime":1619573067168,"results":"19","hashOfConfig":"16"},{"size":2072,"mtime":1619716946168,"results":"20","hashOfConfig":"16"},{"size":714,"mtime":1619998905436,"results":"21","hashOfConfig":"16"},{"size":2465,"mtime":1619999067106,"results":"22","hashOfConfig":"16"},{"size":1469,"mtime":1619579002378,"results":"23","hashOfConfig":"16"},{"size":3649,"mtime":1619998869914,"results":"24","hashOfConfig":"16"},{"size":1591,"mtime":1619998630055,"results":"25","hashOfConfig":"16"},{"size":1184,"mtime":1619573067170,"results":"26","hashOfConfig":"16"},{"size":1408,"mtime":1619989825036,"results":"27","hashOfConfig":"16"},{"size":1492,"mtime":1619573067170,"results":"28","hashOfConfig":"16"},{"size":1997,"mtime":1619999573409,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1xc9jx",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/zan/Desktop/projects/watchtower/client/src/index.js",[],["62","63"],"/Users/zan/Desktop/projects/watchtower/client/src/App.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/reportWebVitals.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/pages/Community.js",["64","65","66","67"],"import React, { useState, useEffect } from \"react\"\nimport { useMutation, useQuery } from \"@apollo/react-hooks\"\nimport { ADD_POST } from \"../utils/mutations\"\nimport { QUERY_POSTS } from '../utils/queries';\n\nconst dummyPostData = [{ username: \"John Doe\", postText: \"john doe says Hello World\" }, { username: \" Jane Doe\", postText: \"Jane says hello world\" }]\nfunction Community() {\n    const { loading, data } = useQuery(QUERY_POSTS);\n    const posts = dummyPostData;//TODO:remove dummbyPostData and replace with real data \n\n    const [addPost, { err }] = useMutation(ADD_POST,\n        {\n            refetchQueries: [\n                { query: QUERY_POSTS }\n            ]\n        })\n    /* using refetch becuase you want to keep the data on the- \n     * page and the data from the server in sync \n     */\n\n    const [newPost, setNewPost] = useState(\"\")\n    const handleNewPost = (e) => {\n        addPost({ variables: { postText: newPost } }).then(res => {\n            console.log(res)\n            setNewPost(\"\")\n        })\n    }\n    return (\n        <div>\n            {posts.map(post => (\n                <div>\n                    <h1>{post.username}</h1>\n                    <h1>{post.postText}</h1>\n                </div>\n            ))}\n            <input value={newPost} onChange={e => setNewPost(e.target.value)}>\n            </input>\n            <button onClick={handleNewPost}>\n                Add Post\n                </button>\n        </div >\n    );\n}\nexport default Community;","/Users/zan/Desktop/projects/watchtower/client/src/pages/Login.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/pages/Dashboard.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/pages/Sensor.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/pages/DataUpload.js",["68"],"import React, { useEffect } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { ADD_DATA } from '../utils/mutations';\n\nfunction DataUpload() {\n\n    //load mutation function\n    const [addData, {error} ] = useMutation(ADD_DATA);\n\n    //get data from url and sort it\n    let info = window.location.href;\n    let data = info.split('?')[1];\n    let sortedData = data.split('&');\n\n    //sort data into variable names\n    let sensorName = sortedData[0].split('=')[1];\n    let measurement = parseInt(sortedData[1].split('=')[1]);\n    let units = sortedData[2].split('=')[1];\n\n    console.log(sensorName, measurement, units);\n\n    //mutation to post data to server\n    const dataSubmit = async () => {\n\n        try {\n            const mutationResponse = await addData({\n                variables: {\n                    sensorName: sensorName,\n                    measurement: measurement,\n                    units: units\n                }\n            });\n\n            if (error) {\n                throw new Error('something went wrong');\n            };\n\n            console.log(mutationResponse);\n\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    //run mutation function once on page load\n    useEffect(() => {\n\n        dataSubmit(sortedData);\n\n    }, []);\n\n\n    return (\n        <>\n            <h1>Sensor Name: {sensorName}</h1>\n            <h1>Measurement: {measurement} {units}</h1>\n        </>\n    )\n\n}\n\nexport default DataUpload","/Users/zan/Desktop/projects/watchtower/client/src/components/Header.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/components/DeviceCard.js",["69"],"import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nfunction DeviceCard({ user }) {\n\n\tconst sensors = user.sensors;\n\n\t//calculate time since last update\n\tconst formattedTime = (time) => {\n\t\tconst now = new Date();\n\n\t\tconst elapsedTime = Math.round((now - time) / (60 * 1000));\n\n\t\treturn elapsedTime;\n\t}\n\n\n\t// //determine units\n\tconst formattedUnits = (units) => {\n\t\tif (units === \"degF\") {\n\t\t\treturn '°F';\n\t\t} else if (units === \"degC\") {\n\t\t\treturn '°C';\n\t\t} else if (units === 'kelvin') {\n\t\t\treturn 'K';\n\t\t} else {\n\t\t\treturn units;\n\t\t}\n\t}\n\n\n\treturn (\n\t\t<div className=\"flex justify-center\">\n\t\t\t<div className=\"grid grid-cols-2\">\n\t\t\t\t{sensors && sensors.map(sensor => (\n\t\t\t\t\t<div key={sensor._id} className=\"border-2 rounded border-black m-1 p-1\">\n\t\t\t\t\t\t<div className=\"font-bold text-white bg-black rounded-t\">\n\t\t\t\t\t\t\t<h3>{sensor.sensorName}</h3>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t{sensor.data.length ?\n\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t<h1><a className=\"font-zcool text-4xl inline\">{sensor.data[sensor.data.length - 1].measurement}</a> {formattedUnits(sensor.data[sensor.data.length - 1].units)}</h1>\n\t\t\t\t\t\t\t\t\t\t<h4 className=\"text-xs\">Last updated {formattedTime(sensor.data[sensor.data.length - 1].timeStamp)} minutes ago</h4>\n\t\t\t\t\t\t\t\t\t\t<Link to={`/sensor/${sensor.sensorName}`}>\n\t\t\t\t\t\t\t\t\t\t\t<button className=\"bg-fifth text-white hover:bg-fourth hover:text-black rounded mt-2 p-1 text-sm mr-1\">View Data</button>\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (<h4>No Data Yet</h4>)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default DeviceCard;\n","/Users/zan/Desktop/projects/watchtower/client/src/utils/mutations.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/utils/queries.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/utils/auth.js",[],"/Users/zan/Desktop/projects/watchtower/client/src/pages/DeleteSensor.js",["70","71","72"],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":1,"column":27,"nodeType":"79","messageId":"80","endLine":1,"endColumn":36},{"ruleId":"77","severity":1,"message":"81","line":8,"column":13,"nodeType":"79","messageId":"80","endLine":8,"endColumn":20},{"ruleId":"77","severity":1,"message":"82","line":8,"column":22,"nodeType":"79","messageId":"80","endLine":8,"endColumn":26},{"ruleId":"77","severity":1,"message":"83","line":11,"column":23,"nodeType":"79","messageId":"80","endLine":11,"endColumn":26},{"ruleId":"84","severity":1,"message":"85","line":50,"column":8,"nodeType":"86","endLine":50,"endColumn":10,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":45,"column":15,"nodeType":"90","endLine":45,"endColumn":57},{"ruleId":"77","severity":1,"message":"78","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":26},{"ruleId":"77","severity":1,"message":"91","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":21},{"ruleId":"77","severity":1,"message":"92","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":18},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","'data' is assigned a value but never used.","'err' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dataSubmit' and 'sortedData'. Either include them or remove the dependency array.","ArrayExpression",["95"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useMutation' is defined but never used.","'ADD_DATA' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"96","fix":"97"},"Update the dependencies array to be: [dataSubmit, sortedData]",{"range":"98","text":"99"},[1288,1290],"[dataSubmit, sortedData]"]