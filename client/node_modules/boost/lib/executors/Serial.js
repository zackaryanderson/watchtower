"use strict";
/**
 * @copyright   2017-2018, Miles Johnson
 * @license     https://opensource.org/licenses/MIT
 */
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var Executor_1 = __importDefault(require("../Executor"));
var SerialExecutor = /** @class */ (function (_super) {
    __extends(SerialExecutor, _super);
    function SerialExecutor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * Execute tasks in sequential order with the output of each
     * task being passed to the next promise in the chain.
     */
    SerialExecutor.prototype.run = function (tasks, value) {
        var _this = this;
        this.debug('Serializing %d tasks', tasks.length);
        return tasks.reduce(function (promise, task) { return promise.then(function (val) { return _this.execute(task, val); }); }, Promise.resolve(value));
    };
    return SerialExecutor;
}(Executor_1.default));
exports.default = SerialExecutor;
