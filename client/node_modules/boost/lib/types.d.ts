/**
 * @copyright   2017-2018, Miles Johnson
 * @license     https://opensource.org/licenses/MIT
 */
import debug from 'debug';
import Plugin from './Plugin';
import Reporter from './Reporter';
export interface Debugger extends debug.IDebugger {
    (message: any, ...args: any[]): void;
    invariant(condition: boolean, message: string, pass: string, fail: string): void;
}
export interface PluginConfig {
    plugin: string;
    [key: string]: any;
}
export interface ReporterConfig {
    reporter: string;
    [key: string]: any;
}
export interface ToolConfig {
    debug: boolean;
    extends: string | string[];
    plugins: (string | PluginConfig | Plugin<any>)[];
    reporters: (string | ReporterConfig | Reporter<any>)[];
    [key: string]: any;
}
export interface PackageConfig {
    name: string;
    [key: string]: any;
}
export declare type Status = 'pending' | 'running' | 'skipped' | 'passed' | 'failed';
export declare type Color = 'black' | 'red' | 'green' | 'yellow' | 'blue' | 'magenta' | 'cyan' | 'white' | 'gray';
export declare type ColorType = 'failure' | 'pending' | 'success' | 'warning';
export declare type ColorPalette = {
    [T in ColorType]: Color | string;
};
